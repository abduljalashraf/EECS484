-- script for creating views



CREATE VIEW VIEW_USER_INFORMATION AS 
SELECT U.USER_ID, U.FIRST_NAME, U.LAST_NAME, U.YEAR_OF_BIRTH, U.MONTH_OF_BIRTH, U.DAY_OF_BIRTH, U.GENDER, 
C1.CITY_NAME AS CURRENT_CITY, C1.STATE_NAME AS CURRENT_STATE, C1.COUNTRY_NAME AS CURRENT_COUNTRY,
C2.CITY_NAME AS HOMETOWN_CITY, C2.STATE_NAME AS HOMETOWN_STATE, C2.COUNTRY_NAME AS HOMETOWN_COUNTRY,
P.INSTITUTION AS INSTITUTION_NAME, E.PROGRAM_YEAR, P.CONCENTRATION AS PROGRAM_CONCENTRATION, P.DEGREE AS PROGRAM_DEGREE
FROM USERS U
LEFT JOIN USER_CURRENT_CITIES A ON A.USER_ID = U.USER_ID
LEFT JOIN USER_HOMETOWN_CITIES H ON H.USER_ID = U.USER_ID
LEFT JOIN CITIES C1 ON C1.CITY_ID = A.CURRENT_CITY_ID
LEFT JOIN CITIES C2 ON C2.CITY_ID = H.HOMETOWN_CITY_ID
LEFT JOIN EDUCATION E ON U.USER_ID = E.USER_ID
LEFT JOIN PROGRAMS P ON P.PROGRAM_ID = E.PROGRAM_ID;


-- OLD STUFF
-- CREATE VIEW TEST_USERS AS
-- SELECT U.USER_ID, U.FIRST_NAME, U.LAST_NAME, U.YEAR_OF_BIRTH, U.MONTH_OF_BIRTH, U.DAY_OF_BIRTH, U.GENDER,
-- C1.CITY_NAME AS CURRENT_CITY, C1.STATE_NAME AS CURRENT_STATE, C1.COUNTRY_NAME AS CURRENT_COUNTRY,
-- C2.CITY_NAME AS HOMETOWN_CITY, C2.STATE_NAME AS HOMETOWN_STATE, C2.COUNTRY_NAME AS HOMETOWN_COUNTRY, 
-- P.INSTITUTION AS INSTITUTION_NAME, E.PROGRAM_YEAR, P.CONCENTRATION AS PROGRAM_CONCENTRATION, P.DEGREE AS PROGRAM_DEGREE
-- FROM USERS U, CITIES C1, CITIES C2, USER_CURRENT_CITIES A, USER_HOMETOWN_CITIES H, PROGRAMS P, EDUCATION E
-- WHERE ((C1.CITY_ID = A.CURRENT_CITY_ID AND A.USER_ID = U.USER_ID) OR (A.CURRENT_CITY_ID IS NULL)) AND 
-- ((C2.CITY_ID = H.HOMETOWN_CITY_ID AND H.USER_ID = U.USER_ID) OR (H.HOMETOWN_CITY_ID IS NULL)) AND 
-- ((P.PROGRAM_ID = E.PROGRAM_ID AND E.USER_ID = U.USER_ID) OR (E.PROGRAM_ID IS NULL));


-- OLD STUFF
-- CREATE VIEW VIEW_USER_INFORMATION AS 
-- SELECT U.USER_ID, U.FIRST_NAME, U.LAST_NAME, U.YEAR_OF_BIRTH, U.MONTH_OF_BIRTH, U.DAY_OF_BIRTH, U.GENDER, 
-- C1.CITY_NAME AS CURRENT_CITY, C1.STATE_NAME AS CURRENT_STATE, C1.COUNTRY_NAME AS CURRENT_COUNTRY,
-- C2.CITY_NAME AS HOMETOWN_CITY, C2.STATE_NAME AS HOMETOWN_STATE, C2.COUNTRY_NAME AS HOMETOWN_COUNTRY,
-- P.INSTITUTION AS INSTITUTION_NAME, E.PROGRAM_YEAR, P.CONCENTRATION AS PROGRAM_CONCENTRATION, P.DEGREE AS PROGRAM_DEGREE
-- FROM USERS U, PROGRAMS P, USER_CURRENT_CITIES A, USER_HOMETOWN_CITIES H, CITIES C1, CITIES C2, EDUCATION E
-- WHERE C1.CITY_ID = A.CURRENT_CITY_ID AND C2.CITY_ID = H.HOMETOWN_CITY_ID AND P.PROGRAM_ID = E.PROGRAM_ID AND E.USER_ID = U.USER_ID
-- AND H.USER_ID = U.USER_ID AND A.USER_ID = U.USER_ID;
-- do we need to add E.USER_ID = U.USER_ID AND H.USER_ID = U.USER_ID AND A.USER_ID = U.USER_ID ????


CREATE VIEW VIEW_ARE_FRIENDS AS
SELECT * FROM FRIENDS;


CREATE VIEW VIEW_PHOTO_INFORMATION AS
SELECT A.ALBUM_ID, A.ALBUM_OWNER_ID AS OWNER_ID, A.COVER_PHOTO_ID, A.ALBUM_NAME, A.ALBUM_CREATED_TIME, A.ALBUM_MODIFIED_TIME, A.ALBUM_LINK, A.ALBUM_VISIBILITY,
P.PHOTO_ID, P.PHOTO_CAPTION, P.PHOTO_CREATED_TIME, P.PHOTO_MODIFIED_TIME, P.PHOTO_LINK
FROM ALBUMS A
LEFT JOIN PHOTOS P ON P.ALBUM_ID = A.ALBUM_ID;


CREATE VIEW VIEW_EVENT_INFORMATION AS
SELECT E.EVENT_ID, E.EVENT_CREATOR_ID, E.EVENT_NAME, E.EVENT_TAGLINE, E.EVENT_DESCRIPTION, E.EVENT_HOST, E.EVENT_TYPE, E.EVENT_SUBTYPE, 
E.EVENT_ADDRESS, C.CITY_NAME AS EVENT_CITY, C.STATE_NAME AS EVENT_STATE, C.COUNTRY_NAME AS EVENT_COUNTRY, E.EVENT_START_TIME, E.EVENT_END_TIME
FROM USER_EVENTS E
LEFT JOIN CITIES C ON E.EVENT_CITY_ID = C.CITY_ID;


CREATE VIEW VIEW_TAG_INFORMATION AS
SELECT T.TAG_PHOTO_ID AS PHOTO_ID, T.TAG_SUBJECT_ID, T.TAG_CREATED_TIME, T.TAG_X AS TAG_X_COORDINATE, T.TAG_Y AS TAG_Y_COORDINATE
FROM TAGS T;
-- do we need to link it to a photo id from photos? or a user id from users? I feel like no...




-- FROM W3 SCHOOLS: 

-- SELECT * 
-- FROM tableX 
-- INNER JOIN tableY on tableX.X = tableY.Y;

-- IS SAME AS

-- SELECT tableX.*,tableY.*  
-- FROM tableX,tableY 
-- WHERE tableX.X = tableY.Y;



