INSERT INTO USERS (USER_ID, FIRST_NAME, LAST_NAME,YEAR_OF_BIRTH, MONTH_OF_BIRTH, DAY_OF_BIRTH, GENDER)
SELECT DISTINCT USER_ID, FIRST_NAME, LAST_NAME,
YEAR_OF_BIRTH, MONTH_OF_BIRTH, DAY_OF_BIRTH, GENDER
FROM jsoren.PUBLIC_USER_INFORMATION;

INSERT INTO CITIES (CITY_NAME, STATE_NAME, COUNTRY_NAME)
SELECT DISTINCT CURRENT_CITY, CURRENT_STATE, CURRENT_COUNTRY
FROM jsoren.PUBLIC_USER_INFORMATION
UNION
SELECT DISTINCT HOMETOWN_CITY, HOMETOWN_STATE, HOMETOWN_COUNTRY
FROM jsoren.PUBLIC_USER_INFORMATION
UNION 
SELECT DISTINCT EVENT_CITY, EVENT_STATE, EVENT_COUNTRY
FROM jsoren.PUBLIC_EVENT_INFORMATION;

INSERT INTO USER_CURRENT_CITIES (USER_ID, CURRENT_CITY_ID)
SELECT DISTINCT P.USER_ID, C.CITY_ID
FROM jsoren.PUBLIC_USER_INFORMATION P, CITIES C 
WHERE P.CURRENT_CITY = C.CITY_NAME AND P.CURRENT_STATE = C.STATE_NAME AND P.CURRENT_COUNTRY = C.COUNTRY_NAME;

INSERT INTO USER_HOMETOWN_CITIES (USER_ID, HOMETOWN_CITY_ID)
SELECT DISTINCT P.USER_ID, C.CITY_ID
FROM jsoren.PUBLIC_USER_INFORMATION P, CITIES C
WHERE P.HOMETOWN_CITY = C.CITY_NAME AND P.HOMETOWN_STATE = C.STATE_NAME AND P.HOMETOWN_COUNTRY = C.COUNTRY_NAME;

INSERT INTO PROGRAMS (INSTITUTION, CONCENTRATION, DEGREE)
SELECT DISTINCT INSTITUTION_NAME, PROGRAM_CONCENTRATION, PROGRAM_DEGREE
FROM jsoren.PUBLIC_USER_INFORMATION
WHERE INSTITUTION_NAME IS NOT NULL AND PROGRAM_CONCENTRATION IS NOT NULL AND PROGRAM_DEGREE IS NOT NULL;

INSERT INTO EDUCATION (USER_ID, PROGRAM_ID, PROGRAM_YEAR)
SELECT DISTINCT P.USER_ID, R.PROGRAM_ID, P.PROGRAM_YEAR
FROM jsoren.PUBLIC_USER_INFORMATION P, PROGRAMS R
WHERE P.INSTITUTION_NAME = R.INSTITUTION AND P.PROGRAM_CONCENTRATION = R.CONCENTRATION AND P.PROGRAM_DEGREE = R.DEGREE;

--Is program year supposed to be unique? idkkk
-- SELECT P.PROGRAM_YEAR, P.USER_ID, P.PROGRAM_ID
-- FROM jsoren.PUBLIC_USER_INFORMATION P, PROGRAMS R
-- WHERE A.USER_ID = B.USER_ID AND P.INSTITUTION_NAME = R.INSTITUTION AND P.PROGRAM_CONCENTRATION = R.CONCENTRATION AND P.PROGRAM_DEGREE = R.DEGREE

INSERT INTO FRIENDS
SELECT * FROM jsoren.PUBLIC_ARE_FRIENDS;

INSERT INTO ALBUMS (ALBUM_ID, ALBUM_OWNER_ID, COVER_PHOTO_ID, ALBUM_NAME, ALBUM_CREATED_TIME, ALBUM_MODIFIED_TIME, ALBUM_LINK, ALBUM_VISIBILITY)
SELECT DISTINCT ALBUM_ID, OWNER_ID, COVER_PHOTO_ID, ALBUM_NAME, ALBUM_CREATED_TIME, ALBUM_MODIFIED_TIME, ALBUM_LINK, ALBUM_VISIBILITY
FROM jsoren.PUBLIC_PHOTO_INFORMATION;

INSERT INTO PHOTOS (PHOTO_ID, ALBUM_ID, PHOTO_CAPTION, PHOTO_CREATED_TIME, PHOTO_MODIFIED_TIME, PHOTO_LINK)
SELECT PHOTO_ID, ALBUM_ID, PHOTO_CAPTION, PHOTO_CREATED_TIME, PHOTO_MODIFIED_TIME, PHOTO_LINK
FROM jsoren.PUBLIC_PHOTO_INFORMATION;

INSERT INTO TAGS (TAG_PHOTO_ID, TAG_SUBJECT_ID, TAG_CREATED_TIME, TAG_X, TAG_Y)
SELECT PHOTO_ID, TAG_SUBJECT_ID, TAG_CREATED_TIME, TAG_X_COORDINATE, TAG_Y_COORDINATE
FROM jsoren.PUBLIC_TAG_INFORMATION;

INSERT INTO USER_EVENTS (EVENT_ID, EVENT_CREATOR_ID, EVENT_NAME, EVENT_TAGLINE, EVENT_DESCRIPTION, EVENT_HOST, EVENT_TYPE, EVENT_SUBTYPE, EVENT_ADDRESS, EVENT_CITY_ID, EVENT_START_TIME, EVENT_END_TIME)
SELECT A.EVENT_ID, A.EVENT_CREATOR_ID, A.EVENT_NAME, A.EVENT_TAGLINE, A.EVENT_DESCRIPTION, A.EVENT_HOST, A.EVENT_TYPE, A.EVENT_SUBTYPE, A.EVENT_ADDRESS, C.CITY_ID AS EVENT_CITY_ID, A.EVENT_START_TIME, A.EVENT_END_TIME
FROM jsoren.PUBLIC_EVENT_INFORMATION A
INNER JOIN CITIES C ON A.EVENT_CITY = C.CITY_NAME AND A.EVENT_STATE = C.STATE_NAME AND A.EVENT_COUNTRY = C.COUNTRY_NAME;
